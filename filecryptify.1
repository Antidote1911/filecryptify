.TH FILECRYPTIFY 1
.SH NAME
filecryptify \- encrypt files using symmetric encryption
.SH SYNOPSIS
.B filecryptify
\fB\-G\fR
\fB\-k\fR \fIkeyfile\fR
.sp
.B filecryptify
\fB\-E\fR
\fB\-k\fR \fIkeyfile\fR
[\fB\-p\fR \fIplaintextfile\fR]
[\fB\-c\fR \fIciphertextfile\fR]
.sp
.B filecryptify
\fB\-D\fR
\fB\-k\fR \fIkeyfile\fR
[\fB\-p\fR \fIplaintextfile\fR]
[\fB\-c\fR \fIciphertextfile\fR]
.sp
.B filecryptify
\fB\-V\fR
.SH DESCRIPTION
.B filecryptify
is a program to encrypt files using symmetric encryption.
.sp
Default libsodium algorithms are used, in this case the XChaCha20-Poly1305 construction from the streaming API.
.SH OPTIONS
.TP
.BR \-G
Generate a new random symmetric key. Must be combined with the \fB\-k\fR argument.
.TP
.BR \-E
Encrypt a file with the given key from \fB\-k\fR. See \fB\-p\fR and \fB\-c\fR for input and output.
.TP
.BR \-D
Decrypt a file with the given key from \fB\-k\fR. See \fB\-c\fR and \fB\-p\fR for input and output.
.TP
.BR \-k " " \fIkeyfile\fR
Path to a keyfile containing a symmetric key generated by \fB\-G\fR
.TP
.BR \-c " " \fIciphertextfile\fR
.RS
.IP \(bu 2
During encryption with \fB\-E\fR, the ciphertext will be written to this file. If not given, stdout is used.
.IP \(bu 2
During decryption with \fB\-D\fR, the ciphertext will be read from this file. If not given, stdin is used.
.RE
.TP
.BR \-c " " \fIplaintextfile\fR
.RS
.IP \(bu 2
During encryption with \fB\-E\fR, the plaintext will be read from this file. If not given, stdin is used.
.IP \(bu 2
During decryption with \fB\-D\fR, the plaintext will be written to this file. If not given, stdout is used.
.RE
.TP
.BR \-V
Prints the version of \fBfilecryptify\fR and then exits.
.SH AUTHOR
Written by Linus Karlsson <me@linuskarlsson.se>
.SH COPYRIGHT
Copyright (c) 2018, 2019 Linus Karlsson.
.PP
License: ISC. See \fIhttps://github.com/zozs/filecryptify/LICENSE\fR for full license text.
